/*
 * @(#)Comuna.java
 *
 * Copyright (c) 2025 FAE-USACH
 */
package domain.model;

//Generated 24-mar-2009 15:19:39 by Hibernate Tools 3.2.1.GA
import java.io.Serializable;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * Comuna generated by hbm2java
 */
public class Comuna implements Serializable {

    private static final long serialVersionUID = 1L;
    private Integer comCod;
    private Integer comCodOfi;
    private String comNom;
    private Region region;

    /**
     *
     */
    public Comuna() {
    }

    /**
     * Method description
     *
     * @return
     */
    public Integer getComCod() {
        return this.comCod;
    }

    /**
     * Method description
     *
     * @param comCod
     */
    public void setComCod(Integer comCod) {
        this.comCod = comCod;
    }

    /**
     * Method description
     *
     * @return
     */
    public String getComNom() {
        return this.comNom;
    }

    /**
     * Method description
     *
     * @param comNom
     */
    public void setComNom(String comNom) {
        this.comNom = comNom;
    }

    /**
     * Method description
     *
     * @return
     */
    public Integer getComCodOfi() {
        return this.comCodOfi;
    }

    /**
     * Method description
     *
     * @param comCodOfi
     */
    public void setComCodOfi(Integer comCodOfi) {
        this.comCodOfi = comCodOfi;
    }

    /**
     * Method description
     *
     * @return
     */
    public Region getRegion() {
        return region;
    }

    /**
     * Method description
     *
     * @param region
     */
    public void setRegion(Region region) {
        this.region = region;
    }

    /**
     * BUSINESS LOGIC
     *
     * @param regionList
     * @param comunaFullList
     * @return
     */
    public Map<Integer, List<Comuna>> getComunaMap(List<Region> regionList, List<Comuna> comunaFullList) {
        // Creamos el mapa agrupando las comunas por el código de la región
        return comunaFullList.stream()
                .filter(comuna -> comuna.getRegion() != null) // Asegurarse de que la región no sea null
                .collect(Collectors.groupingBy(comuna -> comuna.getRegion().getRegCod()));
    }
}
