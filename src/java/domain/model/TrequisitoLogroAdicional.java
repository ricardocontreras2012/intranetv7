/*
 * @(#)TrequisitoLogroAdicional.java
 *
 * Copyright (c) 2025 FAE-USACH
 */
package domain.model;

//Generated 24-mar-2009 15:19:39 by Hibernate Tools 3.2.1.GA
import java.io.Serializable;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

/**
 * TrequisitoLogroAdicional generated by hbm2java
 */
public class TrequisitoLogroAdicional implements Serializable {

    private static final long serialVersionUID = 1L;
    private Set<CalificacionLogroAdicional> calificacionLogroAdicionals = new HashSet<>(0);
    private Integer trlaCod;
    private String trlaDes;

    /**
     *
     */
    public TrequisitoLogroAdicional() {
    }

    /**
     * Method description
     *
     * @return
     */
    public Set<CalificacionLogroAdicional> getCalificacionLogroAdicionals() {
        return calificacionLogroAdicionals;
    }

    /**
     * Method description
     *
     * @param calificacionLogroAdicionals
     */
    public void setCalificacionLogroAdicionals(Set<CalificacionLogroAdicional> calificacionLogroAdicionals) {
        this.calificacionLogroAdicionals = calificacionLogroAdicionals;
    }

    public Integer getTrlaCod() {
        return trlaCod;
    }

    public void setTrlaCod(Integer trlaCod) {
        this.trlaCod = trlaCod;
    }

    public String getTrlaDes() {
        return trlaDes;
    }

    public void setTrlaDes(String trlaDes) {
        this.trlaDes = trlaDes;
    }    

    /*
     public List<CalificacionRequisitoAdicionalLogro> getCalificacionRequisitoAdicionalLogroList() {
     this.calificacionRequisitoAdicionalLogroList = new ArrayList<CalificacionRequisitoAdicionalLogro>(calificacionLogroAdicionals);
     Collections.sort(this.calificacionRequisitoAdicionalLogroList, new CalificacionRequisitoAdicionalLogroComparable());

     return this.calificacionRequisitoAdicionalLogroList;
     }
     */
    /**
     * Method description
     *
     * @return
     */
    public boolean estaAprobada() {
        Iterator<CalificacionLogroAdicional> iter = calificacionLogroAdicionals.iterator();

        return iter.hasNext() && "A".equals(iter.next().getClaSitAlu());
    }
}
